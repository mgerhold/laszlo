add_executable(
        laszlo
        main.cpp
        lexer.hpp
        lexer.cpp
        token.hpp
        token.cpp
        overloaded.hpp
        parser.cpp
        parser.hpp
        interpreter.hpp
        source_location.hpp
        ostream_formatter.hpp
        parser_error.hpp
        lexer_error.hpp
        runtime_error.hpp
        scope.hpp
        control_flow.hpp
        values/value.hpp
        values/integer.hpp
        values/string.hpp
        values/bool.hpp
        values/array.hpp
        values/iterator.hpp
        values/sentinel.hpp
        values/range_iterator.hpp
        values/integer.cpp
        values/array_iterator.hpp
        values/range.hpp
        values/array.cpp
        expressions/expression.hpp
        expressions/integer_literal.hpp
        expressions/string_literal.hpp
        expressions/bool_literal.hpp
        expressions/array_literal.hpp
        expressions/unary_operator.hpp
        expressions/binary_operator.hpp
        expressions/name.hpp
        expressions/range.hpp
        expressions/subscript.hpp
        types.hpp
        expressions/typeof.hpp
        values/function.hpp
        expressions/call.hpp
        values/nothing.hpp
        values/function.cpp
        values/value.cpp
        expressions/member_access.hpp
        values/string.cpp
        expressions/char_literal.hpp
        values/char.hpp
        values/char.cpp
        values/string_iterator.hpp
        values/string_iterator.cpp
        statements/expression_statement.hpp
        statements/statement.hpp
        statements/print.hpp
        statements/println.hpp
        statements/if.hpp
        statements/variable_definition.hpp
        statements/block.hpp
        statements/assert.hpp
        statements/assignment.hpp
        statements/while.hpp
        statements/break.hpp
        statements/continue.hpp
        statements/return.hpp
        statements/for.hpp
        statements/function_declaration.hpp
        statements/function_declaration.cpp
)

if (EMSCRIPTEN)
    add_definitions(-DEMSCRIPTEN)
    target_compile_options(laszlo PRIVATE "-fexceptions")
    set_target_properties(laszlo PROPERTIES LINK_FLAGS "--preload-file ${CMAKE_SOURCE_DIR}/asset_dir/test.las@programs/ -fexceptions --shell-file ${CMAKE_SOURCE_DIR}/emscripten/shell.html -sEXPORTED_FUNCTIONS=_main -sNO_EXIT_RUNTIME"
    )

    add_custom_command(TARGET laszlo POST_BUILD COMMAND ${CMAKE_COMMAND} -E copy ${CMAKE_SOURCE_DIR}/emscripten/mode-laszlo.js ${CMAKE_CURRENT_BINARY_DIR}/mode-laszlo.js)
endif ()
